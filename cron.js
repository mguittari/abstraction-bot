import OpenAI from "openai";
import { TwitterApi } from "twitter-api-v2";
import fs from "node:fs";
import "dotenv/config";

const openai = new OpenAI();

const twitterClient = new TwitterApi({
	appKey: process.env.X_API_KEY,
	appSecret: process.env.X_API_SECRET,
	accessToken: process.env.X_ACCESS_TOKEN,
	accessSecret: process.env.X_ACCESS_SECRET,
});

const prompt = `
G√©n√®res moi une image abstraite au format carr√©, de style techno-constructiviste, presque machine-based. L'image contient des formes g√©om√©triques r√©currentes, qui apparaissent sur l'image en diff√©rentes strates et hi√©rarchies.

Choix graphique : 
- Formes nettes, g√©om√©triques (rectangles, cercles, barres, carr√©s, etc).
- Palette limit√©e : noir (code brut), bleu (signal / metadata), blanc cass√© (support). 
- Disposition par quadrants / lignes imbriqu√©es : En r√©f√©rence aux sections internes d‚Äôun fichier PNG (IHDR, IDAT, etc.), sugg√©rant une machine lisible ou un syst√®me ordonn√©.

Tu optes pour un rendu vectoriel propre, froid, syst√©matique, o√π le sens ne vient ni de la beaut√©, ni de l‚Äô√©motion, mais de l‚Äôordre, des formes, de la r√©p√©tition ‚Äì ce qui √©voque la logique du binaire, de l‚Äôencodage.
`;

async function run() {
	try {
		console.log("T√¢che cron d√©marr√©e");

		const result = await openai.images.generate({
			model: "gpt-image-1",
			prompt,
			size: "1024x1024",
			quality: "medium",
		});

		const image_base64 = result.data[0].b64_json;
		const image_bytes = Buffer.from(image_base64, "base64");
		const id = Date.now();
		const filePath = `outputs/Abstract-${id}.png`;

		fs.writeFileSync(filePath, image_bytes);
		console.log(`Image sauvegard√©e : ${filePath}`);

		const mediaId = await twitterClient.v1.uploadMedia(filePath);
		await twitterClient.v2.tweet({
			text: "üåÄ Generated by abstraction-bot.\n#AIart #abstract #generative",
			media: { media_ids: [mediaId] },
		});

		console.log("Image publi√©e sur X");
	} catch (err) {
		console.error("Erreur dans la t√¢che cron :", err);
	}
}

run();
